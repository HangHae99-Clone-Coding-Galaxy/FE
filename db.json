{
  "courses": [
    {
      "title": "ddff",
      "content": "ddfsdf",
      "id": 2
    },
    {
      "title": "강의2",
      "content": "강의내용",
      "id": 3
    },
    {
      "title": "리액트 강좌입니다. ",
      "content": "리액트 쉽게 설명하기 장인, 코딩애플입니다.\n\n'상태관리를 위해 객체를 부모 컴포넌트의 state로부터 props로 받아와서 리턴해주세요' 같은\n\n변태 개발자용어 쓰면서 리액트 어렵게 설명하는 나쁜 사람들이 많아서 준비했습니다.\n\n7살도 이해가능한 코딩애플 React 풀코스!\n\n쓸데없는 Todo App, tic tac toe 예제보다는\n\n어디가서 자랑할 수 있는 블로그, 쇼핑몰 프로젝트 제작과 함께 처음부터 차근차근 알려드림 \n\n \n\n역시 이번 강의도 혼자 리액트로 코딩할 수 있는 사람을 만드는게 목표기 때문에\n\n- 코드 따라적기만 하고 끝내는 강의가 아니라\n\n- 혼자 코딩할 때 도움이 많이되는 문법의 용도와 원리를 많이 설명해드리며\n\n- 많은 DIY 과제가 여러분을 기다리고 있습니다. 혼자 구현해보라는건 혼자해봅시다.\n\n \n\n(1인 1계정 사용 부탁드립니다! IP 다보임)\n\n \n\n \n\n[배울 내용]\n\n- 최근 업데이트된 리액트 18버전으로 진행 \n\n- 리액트 프로젝트 생성, 관리, 빌드하는 법\n\n- 컴포넌트, props, state를 이용한 모던 웹개발 \n\n- JSX for 반복문, 이벤트 핸들러 등 UI기능구현법\n\n- 라우터로 페이지 나누기\n\n- Redux와 context API로 state 관리하기\n\n- Ajax 등으로 서버 API 통신하는 법\n\n- 자주 사용하는 외부 라이브러리 (Bootstrap, Styled component, SASS)\n\n- 자주 필요한 JavaScript ES6 문법들\n\n- lazy loading 등 간단한 성능개선법\n\n- 서버프로젝트와 리액트 연동\n\n \n\n \n\n \n\n[필요한 사전 지식]\n\n- HTML/CSS 기초 \n\n- JavaScript 기초 (var let const, function, if else, for, [], {} 자료 다루기)\n\n- JavaScript가 처음이라면 JavaScript 기초 강의 선행 추천드립니다. \n\n \n\n \n\n \n\n[업데이트 사항]\n\n- 리액트 18버전내용 추가\n\n ",
      "id": 4
    },
    {
      "courseId": 2,
      "comment": "반갑습니다",
      "id": 5
    }
  ],
  "course": {},
  "comments": [
    {
      "courseId": 2,
      "comment": "재밌다!",
      "id": 1
    },
    {
      "courseId": 2,
      "comment": "강의 또 올려주세요!",
      "id": 2
    },
    {
      "courseId": 4,
      "comment": "강의 재밌어요!!",
      "id": 3
    },
    {
      "courseId": 4,
      "comment": "이해가 잘되요!! 꿀설명!!!",
      "id": 4
    }
  ],
  "profile": {
    "name": "typicode"
  }
}